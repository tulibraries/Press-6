version: 2.1

workflows:
  version: 2
  run_tests:
    jobs:
      - run_tests
      - trivy_scan

orbs:
  coveralls: coveralls/coveralls@1.0.6

jobs:
  run_tests:
    docker:
      - image: cimg/ruby:2.7.4-node
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - restore_cache:
          keys:
            - gem-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v6-{{ arch }}-{{ .Branch }}
            - gem-cache-v6-{{ arch }}
            - yarn-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - setup_remote_docker:
          docker_layer_caching: false
          version: 20.10.6

      - run: if [ -e /var/run/docker.sock ]; then sudo chown circleci:circleci /var/run/docker.sock; fi

      - run:
          name: remove dockerignore
          command: rm .dockerignore

      - run:
          name: Build docker containers
          command: docker-compose -p press_6 -f docker-compose.ci.yml up -d

      - run:
          name: Run bundler on the test app container
          command: |
              docker-compose -p Press_6 -f docker-compose.ci.yml exec test_app gem install bundler:2.2.26
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle install --path vendor/bundle
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle binstubs --all
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle binstubs bundler --force

      - run:
          name: Run yarn install on the test app container
          command: |
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app yarn install --frozen-lockfile

      - save_cache:
          key: gem-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
              - vendor/bundle
      - save_cache:
          key: yarn-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run:
          name: Run linter
          command: |
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle exec rubocop -c .rubocop.yml

      - run:
          name: Database migrations
          command: |
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle exec rails db:migrate

      - run:
          name: Run ruby tests
          command: |
              docker-compose -p press_6 -f docker-compose.ci.yml exec test_app bundle exec rake spec
              docker cp press_6_test_app_1:/app/coverage/lcov/app.lcov ./app.lcov

      - coveralls/upload:
          path_to_lcov: ./app.lcov


  trivy_scan:
    docker:
      - image: cimg/base:2020.01
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - restore_cache:
          keys:
            - gem-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v6-{{ arch }}-{{ .Branch }}
            - gem-cache-v6-{{ arch }}
            - yarn-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}


      - setup_remote_docker:
          docker_layer_caching: false
          version: 20.10.6

      - run: if [ -e /var/run/docker.sock ]; then sudo chown circleci:circleci /var/run/docker.sock; fi

      - run:
          name: Build docker container
          command: docker build -t trivy-ci-test:${CIRCLE_SHA1} -f .docker/ci-app/Dockerfile.ci .

      - run:
          name: Install trivy
          command: |
            VERSION=$(
                curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
                grep '"tag_name":' | \
                sed -E 's/.*"v([^"]+)".*/\1/'
            )

            wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
            tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
            sudo mv trivy /usr/local/bin
      - run:
          name: Scan the local image with trivy
          command: trivy --exit-code 1 --severity HIGH,CRITICAL --no-progress trivy-ci-test:${CIRCLE_SHA1}
